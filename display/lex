void VOID_T	print IDENTIFIER	( LP	string STRING_T	str IDENTIFIER	) RP	; SEMICOLON	\n NEW_LINE	void VOID_T	printInteger IDENTIFIER	( LP	integer INT_T	i IDENTIFIER	) RP	; SEMICOLON	\n NEW_LINE	\n NEW_LINE	integer INT_T	reverseInteger IDENTIFIER	( LP	integer INT_T	a IDENTIFIER	) RP	\n NEW_LINE	{ LC	\n NEW_LINE	if IF	( LP	a IDENTIFIER	= EQ	0 INT LITERAL	) RP	{ LC	\n NEW_LINE	return RETURN_T	a IDENTIFIER	; SEMICOLON	\n NEW_LINE	} RC	\n NEW_LINE	boolean BOOLEAN_T	flag IDENTIFIER	:= ASSIGN_T	false FALSE_T	; SEMICOLON	\n NEW_LINE	if IF	( LP	a IDENTIFIER	< LT	0 INT LITERAL	) RP	{ LC	\n NEW_LINE	flag IDENTIFIER	:= ASSIGN_T	true TURE_T	; SEMICOLON	\n NEW_LINE	a IDENTIFIER	:= ASSIGN_T	- SUB	a IDENTIFIER	; SEMICOLON	\n NEW_LINE	} RC	\n NEW_LINE	integer INT_T	b IDENTIFIER	:= ASSIGN_T	0 INT LITERAL	; SEMICOLON	\n NEW_LINE	while WHILE	( LP	a IDENTIFIER	> GT	0 INT LITERAL	) RP	\n NEW_LINE	{ LC	\n NEW_LINE	b IDENTIFIER	:= ASSIGN_T	b IDENTIFIER	* MUL	10 INT_LITERAL	; SEMICOLON	\n NEW_LINE	b IDENTIFIER	:= ASSIGN_T	b IDENTIFIER	+ ADD	a IDENTIFIER	% MODE	10 INT_LITERAL	; SEMICOLON	\n NEW_LINE	a IDENTIFIER	:= ASSIGN_T	a IDENTIFIER	/ DIV	10 INT_LITERAL	; SEMICOLON	\n NEW_LINE	} RC	\n NEW_LINE	if IF	( LP	flag IDENTIFIER	) RP	{ LC	\n NEW_LINE	b IDENTIFIER	:= ASSIGN_T	- SUB	b IDENTIFIER	; SEMICOLON	\n NEW_LINE	} RC	\n NEW_LINE	return RETURN_T	b IDENTIFIER	; SEMICOLON	\n NEW_LINE	} RC	\n NEW_LINE	\n NEW_LINE	integer INT_T	x IDENTIFIER	:= ASSIGN_T	123 INT_LITERAL	; SEMICOLON	\n NEW_LINE	integer INT_T	y IDENTIFIER	:= ASSIGN_T	- SUB	123 INT_LITERAL	; SEMICOLON	\n NEW_LINE	integer INT_T	z IDENTIFIER	:= ASSIGN_T	0 INT LITERAL	; SEMICOLON	\n NEW_LINE	integer INT_T	m IDENTIFIER	:= ASSIGN_T	39 INT_LITERAL	; SEMICOLON	\n NEW_LINE	integer INT_T	n IDENTIFIER	:= ASSIGN_T	91 INT_LITERAL	; SEMICOLON	\n NEW_LINE	\n NEW_LINE	// CC_COMMENT	print("reverse 123 is ");\n NEW_LINE	printInteger IDENTIFIER	( LP	reverseInteger IDENTIFIER	( LP	x IDENTIFIER	) RP	) RP	; SEMICOLON	\n NEW_LINE	print IDENTIFIER	( LP	"  STRING_LITERAL_STATE	\n STRING	\n STRING	"  END_LITERAL_STATE	) RP	; SEMICOLON	\n NEW_LINE	// CC_COMMENT	print("reverse -123 is ");\n NEW_LINE	printInteger IDENTIFIER	( LP	reverseInteger IDENTIFIER	( LP	y IDENTIFIER	) RP	) RP	; SEMICOLON	\n NEW_LINE	print IDENTIFIER	( LP	"  STRING_LITERAL_STATE	\n STRING	\n STRING	"  END_LITERAL_STATE	) RP	; SEMICOLON	\n NEW_LINE	// CC_COMMENT	print("reverse 0 is ");\n NEW_LINE	printInteger IDENTIFIER	( LP	reverseInteger IDENTIFIER	( LP	z IDENTIFIER	) RP	) RP	; SEMICOLON	\n NEW_LINE	print IDENTIFIER	( LP	"  STRING_LITERAL_STATE	\n STRING	\n STRING	"  END_LITERAL_STATE	) RP	; SEMICOLON	\n NEW_LINE	// CC_COMMENT	print("reverse 39 is ");\n NEW_LINE	printInteger IDENTIFIER	( LP	reverseInteger IDENTIFIER	( LP	m IDENTIFIER	) RP	) RP	; SEMICOLON	\n NEW_LINE	print IDENTIFIER	( LP	"  STRING_LITERAL_STATE	\n STRING	\n STRING	"  END_LITERAL_STATE	) RP	; SEMICOLON	\n NEW_LINE	// CC_COMMENT	print("reverse 91 is ");\n NEW_LINE	printInteger IDENTIFIER	( LP	reverseInteger IDENTIFIER	( LP	n IDENTIFIER	) RP	) RP	; SEMICOLON