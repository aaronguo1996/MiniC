Grammar

    0 $accept: program $end

    1 program: external_declaration_list

    2 external_declaration_list: external_declaration
    3                          | external_declaration_list external_declaration

    4 external_declaration: function_definition
    5                     | class_definition
    6                     | statement

    7 basic_type_specifier: VOID_T
    8                     | BOOLEAN_T
    9                     | INT_T
   10                     | DECIMAL_T
   11                     | STRING_T

   12 class_type_specifier: IDENTIFIER

   13 array_type_specifier: basic_type_specifier LB RB
   14                     | IDENTIFIER LB RB
   15                     | array_type_specifier LB RB

   16 type_specifier: basic_type_specifier
   17               | array_type_specifier
   18               | class_type_specifier

   19 function_definition: type_specifier IDENTIFIER LP parameter_list RP block
   20                    | type_specifier IDENTIFIER LP RP block
   21                    | type_specifier IDENTIFIER LP parameter_list RP SEMICOLON
   22                    | type_specifier IDENTIFIER LP RP SEMICOLON

   23 parameter_list: type_specifier IDENTIFIER
   24               | parameter_list COMMA type_specifier IDENTIFIER

   25 argument_list: assignment_expression
   26              | argument_list COMMA assignment_expression

   27 statement_list: statement
   28               | statement_list statement

   29 expression: assignment_expression
   30           | expression COMMA assignment_expression

   31 assignment_expression: logical_or_expression
   32                      | primary_expression assignment_operator assignment_expression

   33 assignment_operator: ASSIGN_T
   34                    | ADD_ASSIGN_T
   35                    | SUB_ASSIGN_T
   36                    | MUL_ASSIGN_T
   37                    | DIV_ASSIGN_T
   38                    | MOD_ASSIGN_T

   39 logical_or_expression: logical_and_expression
   40                      | logical_or_expression LOGICAL_OR logical_and_expression

   41 logical_and_expression: equality_expression
   42                       | logical_and_expression LOGICAL_AND equality_expression

   43 equality_expression: relational_expression
   44                    | equality_expression EQ relational_expression
   45                    | equality_expression NE relational_expression

   46 relational_expression: additive_expression
   47                      | relational_expression GT additive_expression
   48                      | relational_expression GE additive_expression
   49                      | relational_expression LT additive_expression
   50                      | relational_expression LE additive_expression

   51 additive_expression: multiplicative_expression
   52                    | additive_expression ADD multiplicative_expression
   53                    | additive_expression SUB multiplicative_expression

   54 multiplicative_expression: unary_expression
   55                          | multiplicative_expression MUL unary_expression
   56                          | multiplicative_expression DIV unary_expression
   57                          | multiplicative_expression MOD unary_expression

   58 unary_expression: postfix_expression
   59                 | SUB unary_expression
   60                 | EXCLAMATION unary_expression

   61 postfix_expression: primary_expression
   62                   | primary_expression INCREMENT
   63                   | primary_expression DECREMENT

   64 primary_expression: primary_no_new_array
   65                   | array_creation
   66                   | IDENTIFIER

   67 primary_no_new_array: primary_no_new_array LB expression RB
   68                     | IDENTIFIER LB expression RB
   69                     | primary_expression DOT IDENTIFIER
   70                     | primary_expression LP argument_list RP
   71                     | primary_expression LP RP
   72                     | LP expression RP
   73                     | INT_LITERAL
   74                     | DECIMAL_LITERAL
   75                     | STRING_LITERAL
   76                     | REGEXP_LITERAL
   77                     | TRUE_T
   78                     | FALSE_T
   79                     | NULL_T
   80                     | array_literal

   81 array_literal: LC expression_list RC
   82              | LC expression_list COMMA RC

   83 array_creation: NEW basic_type_specifier dimension_expression_list
   84               | NEW basic_type_specifier dimension_expression_list dimension_list
   85               | NEW class_type_specifier dimension_expression_list
   86               | NEW class_type_specifier dimension_expression_list dimension_list

   87 dimension_expression_list: dimension_expression
   88                          | dimension_expression_list dimension_expression

   89 dimension_expression: LB expression RB

   90 dimension_list: LB RB
   91               | dimension_list LB RB

   92 expression_list: /* empty */
   93                | assignment_expression
   94                | expression_list COMMA assignment_expression

   95 statement: expression SEMICOLON
   96          | if_statement
   97          | while_statement
   98          | do_while_statement
   99          | for_statement
  100          | foreach_statement
  101          | return_statement
  102          | break_statement
  103          | continue_statement
  104          | declaration_statement

  105 if_statement: IF LP expression RP block
  106             | IF LP expression RP block ELSE block
  107             | IF LP expression RP block elseif_list
  108             | IF LP expression RP block elseif_list ELSE block

  109 elseif_list: elseif
  110            | elseif_list elseif

  111 elseif: ELSEIF LP expression RP block

  112 while_statement: WHILE LP expression RP block

  113 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

  114 do_while_statement: DO_T block WHILE LP expression RP SEMICOLON

  115 foreach_statement: FOREACH LP IDENTIFIER COLON expression RP block

  116 expression_opt: /* empty */
  117               | expression

  118 return_statement: RETURN_T expression_opt SEMICOLON

  119 identifier_opt: /* empty */
  120               | IDENTIFIER

  121 break_statement: BREAK identifier_opt SEMICOLON

  122 continue_statement: CONTINUE identifier_opt SEMICOLON

  123 declaration_statement: type_specifier IDENTIFIER SEMICOLON
  124                      | type_specifier IDENTIFIER ASSIGN_T expression SEMICOLON

  125 @1: /* empty */

  126 block: LC @1 statement_list RC
  127      | LC RC

  128 class_definition: CLASS_T IDENTIFIER LC member_declaration_list RC

  129 member_declaration_list: member_declaration
  130                        | member_declaration_list member_declaration

  131 member_declaration: type_specifier IDENTIFIER SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 73
DECIMAL_LITERAL (259) 74
STRING_LITERAL (260) 75
REGEXP_LITERAL (261) 76
IDENTIFIER (262) 12 14 19 20 21 22 23 24 66 68 69 115 120 123 124 128
    131
IF (263) 105 106 107 108
ELSE (264) 106 108
ELSEIF (265) 111
WHILE (266) 112 114
DO_T (267) 114
FOR (268) 113
FOREACH (269) 115
RETURN_T (270) 118
BREAK (271) 121
CONTINUE (272) 122
NULL_T (273) 79
NEW (274) 83 84 85 86
LP (275) 19 20 21 22 70 71 72 105 106 107 108 111 112 113 114 115
RP (276) 19 20 21 22 70 71 72 105 106 107 108 111 112 113 114 115
LC (277) 81 82 126 127 128
RC (278) 81 82 126 127 128
LB (279) 13 14 15 67 68 89 90 91
RB (280) 13 14 15 67 68 89 90 91
SEMICOLON (281) 21 22 95 113 114 118 121 122 123 124 131
COLON (282) 115
COMMA (283) 24 26 30 82 94
ASSIGN_T (284) 33 124
LOGICAL_AND (285) 42
LOGICAL_OR (286) 40
EQ (287) 44
NE (288) 45
GT (289) 47
GE (290) 48
LT (291) 49
LE (292) 50
ADD (293) 52
SUB (294) 53 59
MUL (295) 55
DIV (296) 56
MOD (297) 57
TRUE_T (298) 77
FALSE_T (299) 78
EXCLAMATION (300) 60
DOT (301) 69
ADD_ASSIGN_T (302) 34
SUB_ASSIGN_T (303) 35
MUL_ASSIGN_T (304) 36
DIV_ASSIGN_T (305) 37
MOD_ASSIGN_T (306) 38
VOID_T (307) 7
INCREMENT (308) 62
DECREMENT (309) 63
BOOLEAN_T (310) 8
INT_T (311) 9
DECIMAL_T (312) 10
STRING_T (313) 11
CLASS_T (314) 128


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
external_declaration_list (62)
    on left: 2 3, on right: 1 3
external_declaration (63)
    on left: 4 5 6, on right: 2 3
basic_type_specifier (64)
    on left: 7 8 9 10 11, on right: 13 16 83 84
class_type_specifier (65)
    on left: 12, on right: 18 85 86
array_type_specifier (66)
    on left: 13 14 15, on right: 15 17
type_specifier (67)
    on left: 16 17 18, on right: 19 20 21 22 23 24 123 124 131
function_definition (68)
    on left: 19 20 21 22, on right: 4
parameter_list (69)
    on left: 23 24, on right: 19 21 24
argument_list (70)
    on left: 25 26, on right: 26 70
statement_list (71)
    on left: 27 28, on right: 28 126
expression (72)
    on left: 29 30, on right: 30 67 68 72 89 95 105 106 107 108 111
    112 114 115 117 124
assignment_expression (73)
    on left: 31 32, on right: 25 26 29 30 32 93 94
assignment_operator (74)
    on left: 33 34 35 36 37 38, on right: 32
logical_or_expression (75)
    on left: 39 40, on right: 31 40
logical_and_expression (76)
    on left: 41 42, on right: 39 40 42
equality_expression (77)
    on left: 43 44 45, on right: 41 42 44 45
relational_expression (78)
    on left: 46 47 48 49 50, on right: 43 44 45 47 48 49 50
additive_expression (79)
    on left: 51 52 53, on right: 46 47 48 49 50 52 53
multiplicative_expression (80)
    on left: 54 55 56 57, on right: 51 52 53 55 56 57
unary_expression (81)
    on left: 58 59 60, on right: 54 55 56 57 59 60
postfix_expression (82)
    on left: 61 62 63, on right: 58
primary_expression (83)
    on left: 64 65 66, on right: 32 61 62 63 69 70 71
primary_no_new_array (84)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80, on right: 64
    67
array_literal (85)
    on left: 81 82, on right: 80
array_creation (86)
    on left: 83 84 85 86, on right: 65
dimension_expression_list (87)
    on left: 87 88, on right: 83 84 85 86 88
dimension_expression (88)
    on left: 89, on right: 87 88
dimension_list (89)
    on left: 90 91, on right: 84 86 91
expression_list (90)
    on left: 92 93 94, on right: 81 82 94
statement (91)
    on left: 95 96 97 98 99 100 101 102 103 104, on right: 6 27 28
if_statement (92)
    on left: 105 106 107 108, on right: 96
elseif_list (93)
    on left: 109 110, on right: 107 108 110
elseif (94)
    on left: 111, on right: 109 110
while_statement (95)
    on left: 112, on right: 97
for_statement (96)
    on left: 113, on right: 99
do_while_statement (97)
    on left: 114, on right: 98
foreach_statement (98)
    on left: 115, on right: 100
expression_opt (99)
    on left: 116 117, on right: 113 118
return_statement (100)
    on left: 118, on right: 101
identifier_opt (101)
    on left: 119 120, on right: 121 122
break_statement (102)
    on left: 121, on right: 102
continue_statement (103)
    on left: 122, on right: 103
declaration_statement (104)
    on left: 123 124, on right: 104
block (105)
    on left: 126 127, on right: 19 20 105 106 107 108 111 112 113 114
    115
@1 (106)
    on left: 125, on right: 126
class_definition (107)
    on left: 128, on right: 5
member_declaration_list (108)
    on left: 129 130, on right: 128 130
member_declaration (109)
    on left: 131, on right: 129 130


state 0

    0 $accept: . program $end

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 5
    IF               shift, and go to state 6
    WHILE            shift, and go to state 7
    DO_T             shift, and go to state 8
    FOR              shift, and go to state 9
    FOREACH          shift, and go to state 10
    RETURN_T         shift, and go to state 11
    BREAK            shift, and go to state 12
    CONTINUE         shift, and go to state 13
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21
    VOID_T           shift, and go to state 22
    BOOLEAN_T        shift, and go to state 23
    INT_T            shift, and go to state 24
    DECIMAL_T        shift, and go to state 25
    STRING_T         shift, and go to state 26
    CLASS_T          shift, and go to state 27

    program                    go to state 28
    external_declaration_list  go to state 29
    external_declaration       go to state 30
    basic_type_specifier       go to state 31
    class_type_specifier       go to state 32
    array_type_specifier       go to state 33
    type_specifier             go to state 34
    function_definition        go to state 35
    expression                 go to state 36
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49
    statement                  go to state 50
    if_statement               go to state 51
    while_statement            go to state 52
    for_statement              go to state 53
    do_while_statement         go to state 54
    foreach_statement          go to state 55
    return_statement           go to state 56
    break_statement            go to state 57
    continue_statement         go to state 58
    declaration_statement      go to state 59
    class_definition           go to state 60


state 1

   73 primary_no_new_array: INT_LITERAL .

    $default  reduce using rule 73 (primary_no_new_array)


state 2

   74 primary_no_new_array: DECIMAL_LITERAL .

    $default  reduce using rule 74 (primary_no_new_array)


state 3

   75 primary_no_new_array: STRING_LITERAL .

    $default  reduce using rule 75 (primary_no_new_array)


state 4

   76 primary_no_new_array: REGEXP_LITERAL .

    $default  reduce using rule 76 (primary_no_new_array)


state 5

   12 class_type_specifier: IDENTIFIER .
   14 array_type_specifier: IDENTIFIER . LB RB
   66 primary_expression: IDENTIFIER .
   68 primary_no_new_array: IDENTIFIER . LB expression RB

    LB  shift, and go to state 61

    IDENTIFIER  reduce using rule 12 (class_type_specifier)
    $default    reduce using rule 66 (primary_expression)


state 6

  105 if_statement: IF . LP expression RP block
  106             | IF . LP expression RP block ELSE block
  107             | IF . LP expression RP block elseif_list
  108             | IF . LP expression RP block elseif_list ELSE block

    LP  shift, and go to state 62


state 7

  112 while_statement: WHILE . LP expression RP block

    LP  shift, and go to state 63


state 8

  114 do_while_statement: DO_T . block WHILE LP expression RP SEMICOLON

    LC  shift, and go to state 64

    block  go to state 65


state 9

  113 for_statement: FOR . LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

    LP  shift, and go to state 66


state 10

  115 foreach_statement: FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 67


state 11

  118 return_statement: RETURN_T . expression_opt SEMICOLON

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    $default  reduce using rule 116 (expression_opt)

    expression                 go to state 69
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49
    expression_opt             go to state 70


state 12

  121 break_statement: BREAK . identifier_opt SEMICOLON

    IDENTIFIER  shift, and go to state 71

    $default  reduce using rule 119 (identifier_opt)

    identifier_opt  go to state 72


state 13

  122 continue_statement: CONTINUE . identifier_opt SEMICOLON

    IDENTIFIER  shift, and go to state 71

    $default  reduce using rule 119 (identifier_opt)

    identifier_opt  go to state 73


state 14

   79 primary_no_new_array: NULL_T .

    $default  reduce using rule 79 (primary_no_new_array)


state 15

   83 array_creation: NEW . basic_type_specifier dimension_expression_list
   84               | NEW . basic_type_specifier dimension_expression_list dimension_list
   85               | NEW . class_type_specifier dimension_expression_list
   86               | NEW . class_type_specifier dimension_expression_list dimension_list

    IDENTIFIER  shift, and go to state 74
    VOID_T      shift, and go to state 22
    BOOLEAN_T   shift, and go to state 23
    INT_T       shift, and go to state 24
    DECIMAL_T   shift, and go to state 25
    STRING_T    shift, and go to state 26

    basic_type_specifier  go to state 75
    class_type_specifier  go to state 76


state 16

   72 primary_no_new_array: LP . expression RP

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 77
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 17

   81 array_literal: LC . expression_list RC
   82              | LC . expression_list COMMA RC

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    $default  reduce using rule 92 (expression_list)

    assignment_expression      go to state 78
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49
    expression_list            go to state 79


state 18

   59 unary_expression: SUB . unary_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    unary_expression      go to state 80
    postfix_expression    go to state 45
    primary_expression    go to state 81
    primary_no_new_array  go to state 47
    array_literal         go to state 48
    array_creation        go to state 49


state 19

   77 primary_no_new_array: TRUE_T .

    $default  reduce using rule 77 (primary_no_new_array)


state 20

   78 primary_no_new_array: FALSE_T .

    $default  reduce using rule 78 (primary_no_new_array)


state 21

   60 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    unary_expression      go to state 82
    postfix_expression    go to state 45
    primary_expression    go to state 81
    primary_no_new_array  go to state 47
    array_literal         go to state 48
    array_creation        go to state 49


state 22

    7 basic_type_specifier: VOID_T .

    $default  reduce using rule 7 (basic_type_specifier)


state 23

    8 basic_type_specifier: BOOLEAN_T .

    $default  reduce using rule 8 (basic_type_specifier)


state 24

    9 basic_type_specifier: INT_T .

    $default  reduce using rule 9 (basic_type_specifier)


state 25

   10 basic_type_specifier: DECIMAL_T .

    $default  reduce using rule 10 (basic_type_specifier)


state 26

   11 basic_type_specifier: STRING_T .

    $default  reduce using rule 11 (basic_type_specifier)


state 27

  128 class_definition: CLASS_T . IDENTIFIER LC member_declaration_list RC

    IDENTIFIER  shift, and go to state 83


state 28

    0 $accept: program . $end

    $end  shift, and go to state 84


state 29

    1 program: external_declaration_list .
    3 external_declaration_list: external_declaration_list . external_declaration

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 5
    IF               shift, and go to state 6
    WHILE            shift, and go to state 7
    DO_T             shift, and go to state 8
    FOR              shift, and go to state 9
    FOREACH          shift, and go to state 10
    RETURN_T         shift, and go to state 11
    BREAK            shift, and go to state 12
    CONTINUE         shift, and go to state 13
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21
    VOID_T           shift, and go to state 22
    BOOLEAN_T        shift, and go to state 23
    INT_T            shift, and go to state 24
    DECIMAL_T        shift, and go to state 25
    STRING_T         shift, and go to state 26
    CLASS_T          shift, and go to state 27

    $default  reduce using rule 1 (program)

    external_declaration       go to state 85
    basic_type_specifier       go to state 31
    class_type_specifier       go to state 32
    array_type_specifier       go to state 33
    type_specifier             go to state 34
    function_definition        go to state 35
    expression                 go to state 36
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49
    statement                  go to state 50
    if_statement               go to state 51
    while_statement            go to state 52
    for_statement              go to state 53
    do_while_statement         go to state 54
    foreach_statement          go to state 55
    return_statement           go to state 56
    break_statement            go to state 57
    continue_statement         go to state 58
    declaration_statement      go to state 59
    class_definition           go to state 60


state 30

    2 external_declaration_list: external_declaration .

    $default  reduce using rule 2 (external_declaration_list)


state 31

   13 array_type_specifier: basic_type_specifier . LB RB
   16 type_specifier: basic_type_specifier .

    LB  shift, and go to state 86

    $default  reduce using rule 16 (type_specifier)


state 32

   18 type_specifier: class_type_specifier .

    $default  reduce using rule 18 (type_specifier)


state 33

   15 array_type_specifier: array_type_specifier . LB RB
   17 type_specifier: array_type_specifier .

    LB  shift, and go to state 87

    $default  reduce using rule 17 (type_specifier)


state 34

   19 function_definition: type_specifier . IDENTIFIER LP parameter_list RP block
   20                    | type_specifier . IDENTIFIER LP RP block
   21                    | type_specifier . IDENTIFIER LP parameter_list RP SEMICOLON
   22                    | type_specifier . IDENTIFIER LP RP SEMICOLON
  123 declaration_statement: type_specifier . IDENTIFIER SEMICOLON
  124                      | type_specifier . IDENTIFIER ASSIGN_T expression SEMICOLON

    IDENTIFIER  shift, and go to state 88


state 35

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


state 36

   30 expression: expression . COMMA assignment_expression
   95 statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 89
    COMMA      shift, and go to state 90


state 37

   29 expression: assignment_expression .

    $default  reduce using rule 29 (expression)


state 38

   31 assignment_expression: logical_or_expression .
   40 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 91

    $default  reduce using rule 31 (assignment_expression)


state 39

   39 logical_or_expression: logical_and_expression .
   42 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 92

    $default  reduce using rule 39 (logical_or_expression)


state 40

   41 logical_and_expression: equality_expression .
   44 equality_expression: equality_expression . EQ relational_expression
   45                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 93
    NE  shift, and go to state 94

    $default  reduce using rule 41 (logical_and_expression)


state 41

   43 equality_expression: relational_expression .
   47 relational_expression: relational_expression . GT additive_expression
   48                      | relational_expression . GE additive_expression
   49                      | relational_expression . LT additive_expression
   50                      | relational_expression . LE additive_expression

    GT  shift, and go to state 95
    GE  shift, and go to state 96
    LT  shift, and go to state 97
    LE  shift, and go to state 98

    $default  reduce using rule 43 (equality_expression)


state 42

   46 relational_expression: additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100

    $default  reduce using rule 46 (relational_expression)


state 43

   51 additive_expression: multiplicative_expression .
   55 multiplicative_expression: multiplicative_expression . MUL unary_expression
   56                          | multiplicative_expression . DIV unary_expression
   57                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 51 (additive_expression)


state 44

   54 multiplicative_expression: unary_expression .

    $default  reduce using rule 54 (multiplicative_expression)


state 45

   58 unary_expression: postfix_expression .

    $default  reduce using rule 58 (unary_expression)


state 46

   32 assignment_expression: primary_expression . assignment_operator assignment_expression
   61 postfix_expression: primary_expression .
   62                   | primary_expression . INCREMENT
   63                   | primary_expression . DECREMENT
   69 primary_no_new_array: primary_expression . DOT IDENTIFIER
   70                     | primary_expression . LP argument_list RP
   71                     | primary_expression . LP RP

    LP            shift, and go to state 104
    ASSIGN_T      shift, and go to state 105
    DOT           shift, and go to state 106
    ADD_ASSIGN_T  shift, and go to state 107
    SUB_ASSIGN_T  shift, and go to state 108
    MUL_ASSIGN_T  shift, and go to state 109
    DIV_ASSIGN_T  shift, and go to state 110
    MOD_ASSIGN_T  shift, and go to state 111
    INCREMENT     shift, and go to state 112
    DECREMENT     shift, and go to state 113

    $default  reduce using rule 61 (postfix_expression)

    assignment_operator  go to state 114


state 47

   64 primary_expression: primary_no_new_array .
   67 primary_no_new_array: primary_no_new_array . LB expression RB

    LB  shift, and go to state 115

    $default  reduce using rule 64 (primary_expression)


state 48

   80 primary_no_new_array: array_literal .

    $default  reduce using rule 80 (primary_no_new_array)


state 49

   65 primary_expression: array_creation .

    $default  reduce using rule 65 (primary_expression)


state 50

    6 external_declaration: statement .

    $default  reduce using rule 6 (external_declaration)


state 51

   96 statement: if_statement .

    $default  reduce using rule 96 (statement)


state 52

   97 statement: while_statement .

    $default  reduce using rule 97 (statement)


state 53

   99 statement: for_statement .

    $default  reduce using rule 99 (statement)


state 54

   98 statement: do_while_statement .

    $default  reduce using rule 98 (statement)


state 55

  100 statement: foreach_statement .

    $default  reduce using rule 100 (statement)


state 56

  101 statement: return_statement .

    $default  reduce using rule 101 (statement)


state 57

  102 statement: break_statement .

    $default  reduce using rule 102 (statement)


state 58

  103 statement: continue_statement .

    $default  reduce using rule 103 (statement)


state 59

  104 statement: declaration_statement .

    $default  reduce using rule 104 (statement)


state 60

    5 external_declaration: class_definition .

    $default  reduce using rule 5 (external_declaration)


state 61

   14 array_type_specifier: IDENTIFIER LB . RB
   68 primary_no_new_array: IDENTIFIER LB . expression RB

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    RB               shift, and go to state 116
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 117
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 62

  105 if_statement: IF LP . expression RP block
  106             | IF LP . expression RP block ELSE block
  107             | IF LP . expression RP block elseif_list
  108             | IF LP . expression RP block elseif_list ELSE block

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 118
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 63

  112 while_statement: WHILE LP . expression RP block

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 119
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 64

  126 block: LC . @1 statement_list RC
  127      | LC . RC

    RC  shift, and go to state 120

    $default  reduce using rule 125 (@1)

    @1  go to state 121


state 65

  114 do_while_statement: DO_T block . WHILE LP expression RP SEMICOLON

    WHILE  shift, and go to state 122


state 66

  113 for_statement: FOR LP . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    $default  reduce using rule 116 (expression_opt)

    expression                 go to state 69
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49
    expression_opt             go to state 123


state 67

  115 foreach_statement: FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 124


state 68

   66 primary_expression: IDENTIFIER .
   68 primary_no_new_array: IDENTIFIER . LB expression RB

    LB  shift, and go to state 125

    $default  reduce using rule 66 (primary_expression)


state 69

   30 expression: expression . COMMA assignment_expression
  117 expression_opt: expression .

    COMMA  shift, and go to state 90

    $default  reduce using rule 117 (expression_opt)


state 70

  118 return_statement: RETURN_T expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 126


state 71

  120 identifier_opt: IDENTIFIER .

    $default  reduce using rule 120 (identifier_opt)


state 72

  121 break_statement: BREAK identifier_opt . SEMICOLON

    SEMICOLON  shift, and go to state 127


state 73

  122 continue_statement: CONTINUE identifier_opt . SEMICOLON

    SEMICOLON  shift, and go to state 128


state 74

   12 class_type_specifier: IDENTIFIER .

    $default  reduce using rule 12 (class_type_specifier)


state 75

   83 array_creation: NEW basic_type_specifier . dimension_expression_list
   84               | NEW basic_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 129

    dimension_expression_list  go to state 130
    dimension_expression       go to state 131


state 76

   85 array_creation: NEW class_type_specifier . dimension_expression_list
   86               | NEW class_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 129

    dimension_expression_list  go to state 132
    dimension_expression       go to state 131


state 77

   30 expression: expression . COMMA assignment_expression
   72 primary_no_new_array: LP expression . RP

    RP     shift, and go to state 133
    COMMA  shift, and go to state 90


state 78

   93 expression_list: assignment_expression .

    $default  reduce using rule 93 (expression_list)


state 79

   81 array_literal: LC expression_list . RC
   82              | LC expression_list . COMMA RC
   94 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 134
    COMMA  shift, and go to state 135


state 80

   59 unary_expression: SUB unary_expression .

    $default  reduce using rule 59 (unary_expression)


state 81

   61 postfix_expression: primary_expression .
   62                   | primary_expression . INCREMENT
   63                   | primary_expression . DECREMENT
   69 primary_no_new_array: primary_expression . DOT IDENTIFIER
   70                     | primary_expression . LP argument_list RP
   71                     | primary_expression . LP RP

    LP         shift, and go to state 104
    DOT        shift, and go to state 106
    INCREMENT  shift, and go to state 112
    DECREMENT  shift, and go to state 113

    $default  reduce using rule 61 (postfix_expression)


state 82

   60 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 60 (unary_expression)


state 83

  128 class_definition: CLASS_T IDENTIFIER . LC member_declaration_list RC

    LC  shift, and go to state 136


state 84

    0 $accept: program $end .

    $default  accept


state 85

    3 external_declaration_list: external_declaration_list external_declaration .

    $default  reduce using rule 3 (external_declaration_list)


state 86

   13 array_type_specifier: basic_type_specifier LB . RB

    RB  shift, and go to state 137


state 87

   15 array_type_specifier: array_type_specifier LB . RB

    RB  shift, and go to state 138


state 88

   19 function_definition: type_specifier IDENTIFIER . LP parameter_list RP block
   20                    | type_specifier IDENTIFIER . LP RP block
   21                    | type_specifier IDENTIFIER . LP parameter_list RP SEMICOLON
   22                    | type_specifier IDENTIFIER . LP RP SEMICOLON
  123 declaration_statement: type_specifier IDENTIFIER . SEMICOLON
  124                      | type_specifier IDENTIFIER . ASSIGN_T expression SEMICOLON

    LP         shift, and go to state 139
    SEMICOLON  shift, and go to state 140
    ASSIGN_T   shift, and go to state 141


state 89

   95 statement: expression SEMICOLON .

    $default  reduce using rule 95 (statement)


state 90

   30 expression: expression COMMA . assignment_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    assignment_expression      go to state 142
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 91

   40 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    logical_and_expression     go to state 143
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 92

   42 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    equality_expression        go to state 144
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 93

   44 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    relational_expression      go to state 145
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 94

   45 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    relational_expression      go to state 146
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 95

   47 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    additive_expression        go to state 147
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 96

   48 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    additive_expression        go to state 148
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 97

   49 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    additive_expression        go to state 149
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 98

   50 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    additive_expression        go to state 150
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 99

   52 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    multiplicative_expression  go to state 151
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 100

   53 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    multiplicative_expression  go to state 152
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 81
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 101

   55 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    unary_expression      go to state 153
    postfix_expression    go to state 45
    primary_expression    go to state 81
    primary_no_new_array  go to state 47
    array_literal         go to state 48
    array_creation        go to state 49


state 102

   56 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    unary_expression      go to state 154
    postfix_expression    go to state 45
    primary_expression    go to state 81
    primary_no_new_array  go to state 47
    array_literal         go to state 48
    array_creation        go to state 49


state 103

   57 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    unary_expression      go to state 155
    postfix_expression    go to state 45
    primary_expression    go to state 81
    primary_no_new_array  go to state 47
    array_literal         go to state 48
    array_creation        go to state 49


state 104

   70 primary_no_new_array: primary_expression LP . argument_list RP
   71                     | primary_expression LP . RP

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    RP               shift, and go to state 156
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    argument_list              go to state 157
    assignment_expression      go to state 158
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 105

   33 assignment_operator: ASSIGN_T .

    $default  reduce using rule 33 (assignment_operator)


state 106

   69 primary_no_new_array: primary_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 159


state 107

   34 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 34 (assignment_operator)


state 108

   35 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 35 (assignment_operator)


state 109

   36 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 36 (assignment_operator)


state 110

   37 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 37 (assignment_operator)


state 111

   38 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 38 (assignment_operator)


state 112

   62 postfix_expression: primary_expression INCREMENT .

    $default  reduce using rule 62 (postfix_expression)


state 113

   63 postfix_expression: primary_expression DECREMENT .

    $default  reduce using rule 63 (postfix_expression)


state 114

   32 assignment_expression: primary_expression assignment_operator . assignment_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    assignment_expression      go to state 160
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 115

   67 primary_no_new_array: primary_no_new_array LB . expression RB

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 161
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 116

   14 array_type_specifier: IDENTIFIER LB RB .

    $default  reduce using rule 14 (array_type_specifier)


state 117

   30 expression: expression . COMMA assignment_expression
   68 primary_no_new_array: IDENTIFIER LB expression . RB

    RB     shift, and go to state 162
    COMMA  shift, and go to state 90


state 118

   30 expression: expression . COMMA assignment_expression
  105 if_statement: IF LP expression . RP block
  106             | IF LP expression . RP block ELSE block
  107             | IF LP expression . RP block elseif_list
  108             | IF LP expression . RP block elseif_list ELSE block

    RP     shift, and go to state 163
    COMMA  shift, and go to state 90


state 119

   30 expression: expression . COMMA assignment_expression
  112 while_statement: WHILE LP expression . RP block

    RP     shift, and go to state 164
    COMMA  shift, and go to state 90


state 120

  127 block: LC RC .

    $default  reduce using rule 127 (block)


state 121

  126 block: LC @1 . statement_list RC

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 5
    IF               shift, and go to state 6
    WHILE            shift, and go to state 7
    DO_T             shift, and go to state 8
    FOR              shift, and go to state 9
    FOREACH          shift, and go to state 10
    RETURN_T         shift, and go to state 11
    BREAK            shift, and go to state 12
    CONTINUE         shift, and go to state 13
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21
    VOID_T           shift, and go to state 22
    BOOLEAN_T        shift, and go to state 23
    INT_T            shift, and go to state 24
    DECIMAL_T        shift, and go to state 25
    STRING_T         shift, and go to state 26

    basic_type_specifier       go to state 31
    class_type_specifier       go to state 32
    array_type_specifier       go to state 33
    type_specifier             go to state 165
    statement_list             go to state 166
    expression                 go to state 36
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49
    statement                  go to state 167
    if_statement               go to state 51
    while_statement            go to state 52
    for_statement              go to state 53
    do_while_statement         go to state 54
    foreach_statement          go to state 55
    return_statement           go to state 56
    break_statement            go to state 57
    continue_statement         go to state 58
    declaration_statement      go to state 59


state 122

  114 do_while_statement: DO_T block WHILE . LP expression RP SEMICOLON

    LP  shift, and go to state 168


state 123

  113 for_statement: FOR LP expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt RP block

    SEMICOLON  shift, and go to state 169


state 124

  115 foreach_statement: FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 170


state 125

   68 primary_no_new_array: IDENTIFIER LB . expression RB

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 117
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 126

  118 return_statement: RETURN_T expression_opt SEMICOLON .

    $default  reduce using rule 118 (return_statement)


state 127

  121 break_statement: BREAK identifier_opt SEMICOLON .

    $default  reduce using rule 121 (break_statement)


state 128

  122 continue_statement: CONTINUE identifier_opt SEMICOLON .

    $default  reduce using rule 122 (continue_statement)


state 129

   89 dimension_expression: LB . expression RB

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 171
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 130

   83 array_creation: NEW basic_type_specifier dimension_expression_list .
   84               | NEW basic_type_specifier dimension_expression_list . dimension_list
   88 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 172

    $default  reduce using rule 83 (array_creation)

    dimension_expression  go to state 173
    dimension_list        go to state 174


state 131

   87 dimension_expression_list: dimension_expression .

    $default  reduce using rule 87 (dimension_expression_list)


state 132

   85 array_creation: NEW class_type_specifier dimension_expression_list .
   86               | NEW class_type_specifier dimension_expression_list . dimension_list
   88 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 172

    $default  reduce using rule 85 (array_creation)

    dimension_expression  go to state 173
    dimension_list        go to state 175


state 133

   72 primary_no_new_array: LP expression RP .

    $default  reduce using rule 72 (primary_no_new_array)


state 134

   81 array_literal: LC expression_list RC .

    $default  reduce using rule 81 (array_literal)


state 135

   82 array_literal: LC expression_list COMMA . RC
   94 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    RC               shift, and go to state 176
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    assignment_expression      go to state 177
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 136

  128 class_definition: CLASS_T IDENTIFIER LC . member_declaration_list RC

    IDENTIFIER  shift, and go to state 178
    VOID_T      shift, and go to state 22
    BOOLEAN_T   shift, and go to state 23
    INT_T       shift, and go to state 24
    DECIMAL_T   shift, and go to state 25
    STRING_T    shift, and go to state 26

    basic_type_specifier     go to state 31
    class_type_specifier     go to state 32
    array_type_specifier     go to state 33
    type_specifier           go to state 179
    member_declaration_list  go to state 180
    member_declaration       go to state 181


state 137

   13 array_type_specifier: basic_type_specifier LB RB .

    $default  reduce using rule 13 (array_type_specifier)


state 138

   15 array_type_specifier: array_type_specifier LB RB .

    $default  reduce using rule 15 (array_type_specifier)


state 139

   19 function_definition: type_specifier IDENTIFIER LP . parameter_list RP block
   20                    | type_specifier IDENTIFIER LP . RP block
   21                    | type_specifier IDENTIFIER LP . parameter_list RP SEMICOLON
   22                    | type_specifier IDENTIFIER LP . RP SEMICOLON

    IDENTIFIER  shift, and go to state 178
    RP          shift, and go to state 182
    VOID_T      shift, and go to state 22
    BOOLEAN_T   shift, and go to state 23
    INT_T       shift, and go to state 24
    DECIMAL_T   shift, and go to state 25
    STRING_T    shift, and go to state 26

    basic_type_specifier  go to state 31
    class_type_specifier  go to state 32
    array_type_specifier  go to state 33
    type_specifier        go to state 183
    parameter_list        go to state 184


state 140

  123 declaration_statement: type_specifier IDENTIFIER SEMICOLON .

    $default  reduce using rule 123 (declaration_statement)


state 141

  124 declaration_statement: type_specifier IDENTIFIER ASSIGN_T . expression SEMICOLON

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 185
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 142

   30 expression: expression COMMA assignment_expression .

    $default  reduce using rule 30 (expression)


state 143

   40 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   42 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 92

    $default  reduce using rule 40 (logical_or_expression)


state 144

   42 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   44 equality_expression: equality_expression . EQ relational_expression
   45                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 93
    NE  shift, and go to state 94

    $default  reduce using rule 42 (logical_and_expression)


state 145

   44 equality_expression: equality_expression EQ relational_expression .
   47 relational_expression: relational_expression . GT additive_expression
   48                      | relational_expression . GE additive_expression
   49                      | relational_expression . LT additive_expression
   50                      | relational_expression . LE additive_expression

    GT  shift, and go to state 95
    GE  shift, and go to state 96
    LT  shift, and go to state 97
    LE  shift, and go to state 98

    $default  reduce using rule 44 (equality_expression)


state 146

   45 equality_expression: equality_expression NE relational_expression .
   47 relational_expression: relational_expression . GT additive_expression
   48                      | relational_expression . GE additive_expression
   49                      | relational_expression . LT additive_expression
   50                      | relational_expression . LE additive_expression

    GT  shift, and go to state 95
    GE  shift, and go to state 96
    LT  shift, and go to state 97
    LE  shift, and go to state 98

    $default  reduce using rule 45 (equality_expression)


state 147

   47 relational_expression: relational_expression GT additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100

    $default  reduce using rule 47 (relational_expression)


state 148

   48 relational_expression: relational_expression GE additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100

    $default  reduce using rule 48 (relational_expression)


state 149

   49 relational_expression: relational_expression LT additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100

    $default  reduce using rule 49 (relational_expression)


state 150

   50 relational_expression: relational_expression LE additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100

    $default  reduce using rule 50 (relational_expression)


state 151

   52 additive_expression: additive_expression ADD multiplicative_expression .
   55 multiplicative_expression: multiplicative_expression . MUL unary_expression
   56                          | multiplicative_expression . DIV unary_expression
   57                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 52 (additive_expression)


state 152

   53 additive_expression: additive_expression SUB multiplicative_expression .
   55 multiplicative_expression: multiplicative_expression . MUL unary_expression
   56                          | multiplicative_expression . DIV unary_expression
   57                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 53 (additive_expression)


state 153

   55 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 55 (multiplicative_expression)


state 154

   56 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 56 (multiplicative_expression)


state 155

   57 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 57 (multiplicative_expression)


state 156

   71 primary_no_new_array: primary_expression LP RP .

    $default  reduce using rule 71 (primary_no_new_array)


state 157

   26 argument_list: argument_list . COMMA assignment_expression
   70 primary_no_new_array: primary_expression LP argument_list . RP

    RP     shift, and go to state 186
    COMMA  shift, and go to state 187


state 158

   25 argument_list: assignment_expression .

    $default  reduce using rule 25 (argument_list)


state 159

   69 primary_no_new_array: primary_expression DOT IDENTIFIER .

    $default  reduce using rule 69 (primary_no_new_array)


state 160

   32 assignment_expression: primary_expression assignment_operator assignment_expression .

    $default  reduce using rule 32 (assignment_expression)


state 161

   30 expression: expression . COMMA assignment_expression
   67 primary_no_new_array: primary_no_new_array LB expression . RB

    RB     shift, and go to state 188
    COMMA  shift, and go to state 90


state 162

   68 primary_no_new_array: IDENTIFIER LB expression RB .

    $default  reduce using rule 68 (primary_no_new_array)


state 163

  105 if_statement: IF LP expression RP . block
  106             | IF LP expression RP . block ELSE block
  107             | IF LP expression RP . block elseif_list
  108             | IF LP expression RP . block elseif_list ELSE block

    LC  shift, and go to state 64

    block  go to state 189


state 164

  112 while_statement: WHILE LP expression RP . block

    LC  shift, and go to state 64

    block  go to state 190


state 165

  123 declaration_statement: type_specifier . IDENTIFIER SEMICOLON
  124                      | type_specifier . IDENTIFIER ASSIGN_T expression SEMICOLON

    IDENTIFIER  shift, and go to state 191


state 166

   28 statement_list: statement_list . statement
  126 block: LC @1 statement_list . RC

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 5
    IF               shift, and go to state 6
    WHILE            shift, and go to state 7
    DO_T             shift, and go to state 8
    FOR              shift, and go to state 9
    FOREACH          shift, and go to state 10
    RETURN_T         shift, and go to state 11
    BREAK            shift, and go to state 12
    CONTINUE         shift, and go to state 13
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    RC               shift, and go to state 192
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21
    VOID_T           shift, and go to state 22
    BOOLEAN_T        shift, and go to state 23
    INT_T            shift, and go to state 24
    DECIMAL_T        shift, and go to state 25
    STRING_T         shift, and go to state 26

    basic_type_specifier       go to state 31
    class_type_specifier       go to state 32
    array_type_specifier       go to state 33
    type_specifier             go to state 165
    expression                 go to state 36
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49
    statement                  go to state 193
    if_statement               go to state 51
    while_statement            go to state 52
    for_statement              go to state 53
    do_while_statement         go to state 54
    foreach_statement          go to state 55
    return_statement           go to state 56
    break_statement            go to state 57
    continue_statement         go to state 58
    declaration_statement      go to state 59


state 167

   27 statement_list: statement .

    $default  reduce using rule 27 (statement_list)


state 168

  114 do_while_statement: DO_T block WHILE LP . expression RP SEMICOLON

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 194
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 169

  113 for_statement: FOR LP expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt RP block

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    $default  reduce using rule 116 (expression_opt)

    expression                 go to state 69
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49
    expression_opt             go to state 195


state 170

  115 foreach_statement: FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 196
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 171

   30 expression: expression . COMMA assignment_expression
   89 dimension_expression: LB expression . RB

    RB     shift, and go to state 197
    COMMA  shift, and go to state 90


state 172

   89 dimension_expression: LB . expression RB
   90 dimension_list: LB . RB

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    RB               shift, and go to state 198
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 171
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 173

   88 dimension_expression_list: dimension_expression_list dimension_expression .

    $default  reduce using rule 88 (dimension_expression_list)


state 174

   84 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list .
   91 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 199

    $default  reduce using rule 84 (array_creation)


state 175

   86 array_creation: NEW class_type_specifier dimension_expression_list dimension_list .
   91 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 199

    $default  reduce using rule 86 (array_creation)


state 176

   82 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 82 (array_literal)


state 177

   94 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 94 (expression_list)


state 178

   12 class_type_specifier: IDENTIFIER .
   14 array_type_specifier: IDENTIFIER . LB RB

    LB  shift, and go to state 200

    $default  reduce using rule 12 (class_type_specifier)


state 179

  131 member_declaration: type_specifier . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 201


state 180

  128 class_definition: CLASS_T IDENTIFIER LC member_declaration_list . RC
  130 member_declaration_list: member_declaration_list . member_declaration

    IDENTIFIER  shift, and go to state 178
    RC          shift, and go to state 202
    VOID_T      shift, and go to state 22
    BOOLEAN_T   shift, and go to state 23
    INT_T       shift, and go to state 24
    DECIMAL_T   shift, and go to state 25
    STRING_T    shift, and go to state 26

    basic_type_specifier  go to state 31
    class_type_specifier  go to state 32
    array_type_specifier  go to state 33
    type_specifier        go to state 179
    member_declaration    go to state 203


state 181

  129 member_declaration_list: member_declaration .

    $default  reduce using rule 129 (member_declaration_list)


state 182

   20 function_definition: type_specifier IDENTIFIER LP RP . block
   22                    | type_specifier IDENTIFIER LP RP . SEMICOLON

    LC         shift, and go to state 64
    SEMICOLON  shift, and go to state 204

    block  go to state 205


state 183

   23 parameter_list: type_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 206


state 184

   19 function_definition: type_specifier IDENTIFIER LP parameter_list . RP block
   21                    | type_specifier IDENTIFIER LP parameter_list . RP SEMICOLON
   24 parameter_list: parameter_list . COMMA type_specifier IDENTIFIER

    RP     shift, and go to state 207
    COMMA  shift, and go to state 208


state 185

   30 expression: expression . COMMA assignment_expression
  124 declaration_statement: type_specifier IDENTIFIER ASSIGN_T expression . SEMICOLON

    SEMICOLON  shift, and go to state 209
    COMMA      shift, and go to state 90


state 186

   70 primary_no_new_array: primary_expression LP argument_list RP .

    $default  reduce using rule 70 (primary_no_new_array)


state 187

   26 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    assignment_expression      go to state 210
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 188

   67 primary_no_new_array: primary_no_new_array LB expression RB .

    $default  reduce using rule 67 (primary_no_new_array)


state 189

  105 if_statement: IF LP expression RP block .
  106             | IF LP expression RP block . ELSE block
  107             | IF LP expression RP block . elseif_list
  108             | IF LP expression RP block . elseif_list ELSE block

    ELSE    shift, and go to state 211
    ELSEIF  shift, and go to state 212

    $default  reduce using rule 105 (if_statement)

    elseif_list  go to state 213
    elseif       go to state 214


state 190

  112 while_statement: WHILE LP expression RP block .

    $default  reduce using rule 112 (while_statement)


state 191

  123 declaration_statement: type_specifier IDENTIFIER . SEMICOLON
  124                      | type_specifier IDENTIFIER . ASSIGN_T expression SEMICOLON

    SEMICOLON  shift, and go to state 140
    ASSIGN_T   shift, and go to state 141


state 192

  126 block: LC @1 statement_list RC .

    $default  reduce using rule 126 (block)


state 193

   28 statement_list: statement_list statement .

    $default  reduce using rule 28 (statement_list)


state 194

   30 expression: expression . COMMA assignment_expression
  114 do_while_statement: DO_T block WHILE LP expression . RP SEMICOLON

    RP     shift, and go to state 215
    COMMA  shift, and go to state 90


state 195

  113 for_statement: FOR LP expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt RP block

    SEMICOLON  shift, and go to state 216


state 196

   30 expression: expression . COMMA assignment_expression
  115 foreach_statement: FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 217
    COMMA  shift, and go to state 90


state 197

   89 dimension_expression: LB expression RB .

    $default  reduce using rule 89 (dimension_expression)


state 198

   90 dimension_list: LB RB .

    $default  reduce using rule 90 (dimension_list)


state 199

   91 dimension_list: dimension_list LB . RB

    RB  shift, and go to state 218


state 200

   14 array_type_specifier: IDENTIFIER LB . RB

    RB  shift, and go to state 116


state 201

  131 member_declaration: type_specifier IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 219


state 202

  128 class_definition: CLASS_T IDENTIFIER LC member_declaration_list RC .

    $default  reduce using rule 128 (class_definition)


state 203

  130 member_declaration_list: member_declaration_list member_declaration .

    $default  reduce using rule 130 (member_declaration_list)


state 204

   22 function_definition: type_specifier IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 22 (function_definition)


state 205

   20 function_definition: type_specifier IDENTIFIER LP RP block .

    $default  reduce using rule 20 (function_definition)


state 206

   23 parameter_list: type_specifier IDENTIFIER .

    $default  reduce using rule 23 (parameter_list)


state 207

   19 function_definition: type_specifier IDENTIFIER LP parameter_list RP . block
   21                    | type_specifier IDENTIFIER LP parameter_list RP . SEMICOLON

    LC         shift, and go to state 64
    SEMICOLON  shift, and go to state 220

    block  go to state 221


state 208

   24 parameter_list: parameter_list COMMA . type_specifier IDENTIFIER

    IDENTIFIER  shift, and go to state 178
    VOID_T      shift, and go to state 22
    BOOLEAN_T   shift, and go to state 23
    INT_T       shift, and go to state 24
    DECIMAL_T   shift, and go to state 25
    STRING_T    shift, and go to state 26

    basic_type_specifier  go to state 31
    class_type_specifier  go to state 32
    array_type_specifier  go to state 33
    type_specifier        go to state 222


state 209

  124 declaration_statement: type_specifier IDENTIFIER ASSIGN_T expression SEMICOLON .

    $default  reduce using rule 124 (declaration_statement)


state 210

   26 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 26 (argument_list)


state 211

  106 if_statement: IF LP expression RP block ELSE . block

    LC  shift, and go to state 64

    block  go to state 223


state 212

  111 elseif: ELSEIF . LP expression RP block

    LP  shift, and go to state 224


state 213

  107 if_statement: IF LP expression RP block elseif_list .
  108             | IF LP expression RP block elseif_list . ELSE block
  110 elseif_list: elseif_list . elseif

    ELSE    shift, and go to state 225
    ELSEIF  shift, and go to state 212

    $default  reduce using rule 107 (if_statement)

    elseif  go to state 226


state 214

  109 elseif_list: elseif .

    $default  reduce using rule 109 (elseif_list)


state 215

  114 do_while_statement: DO_T block WHILE LP expression RP . SEMICOLON

    SEMICOLON  shift, and go to state 227


state 216

  113 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt RP block

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    $default  reduce using rule 116 (expression_opt)

    expression                 go to state 69
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49
    expression_opt             go to state 228


state 217

  115 foreach_statement: FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 64

    block  go to state 229


state 218

   91 dimension_list: dimension_list LB RB .

    $default  reduce using rule 91 (dimension_list)


state 219

  131 member_declaration: type_specifier IDENTIFIER SEMICOLON .

    $default  reduce using rule 131 (member_declaration)


state 220

   21 function_definition: type_specifier IDENTIFIER LP parameter_list RP SEMICOLON .

    $default  reduce using rule 21 (function_definition)


state 221

   19 function_definition: type_specifier IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 19 (function_definition)


state 222

   24 parameter_list: parameter_list COMMA type_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 230


state 223

  106 if_statement: IF LP expression RP block ELSE block .

    $default  reduce using rule 106 (if_statement)


state 224

  111 elseif: ELSEIF LP . expression RP block

    INT_LITERAL      shift, and go to state 1
    DECIMAL_LITERAL  shift, and go to state 2
    STRING_LITERAL   shift, and go to state 3
    REGEXP_LITERAL   shift, and go to state 4
    IDENTIFIER       shift, and go to state 68
    NULL_T           shift, and go to state 14
    NEW              shift, and go to state 15
    LP               shift, and go to state 16
    LC               shift, and go to state 17
    SUB              shift, and go to state 18
    TRUE_T           shift, and go to state 19
    FALSE_T          shift, and go to state 20
    EXCLAMATION      shift, and go to state 21

    expression                 go to state 231
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    additive_expression        go to state 42
    multiplicative_expression  go to state 43
    unary_expression           go to state 44
    postfix_expression         go to state 45
    primary_expression         go to state 46
    primary_no_new_array       go to state 47
    array_literal              go to state 48
    array_creation             go to state 49


state 225

  108 if_statement: IF LP expression RP block elseif_list ELSE . block

    LC  shift, and go to state 64

    block  go to state 232


state 226

  110 elseif_list: elseif_list elseif .

    $default  reduce using rule 110 (elseif_list)


state 227

  114 do_while_statement: DO_T block WHILE LP expression RP SEMICOLON .

    $default  reduce using rule 114 (do_while_statement)


state 228

  113 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . RP block

    RP  shift, and go to state 233


state 229

  115 foreach_statement: FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 115 (foreach_statement)


state 230

   24 parameter_list: parameter_list COMMA type_specifier IDENTIFIER .

    $default  reduce using rule 24 (parameter_list)


state 231

   30 expression: expression . COMMA assignment_expression
  111 elseif: ELSEIF LP expression . RP block

    RP     shift, and go to state 234
    COMMA  shift, and go to state 90


state 232

  108 if_statement: IF LP expression RP block elseif_list ELSE block .

    $default  reduce using rule 108 (if_statement)


state 233

  113 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP . block

    LC  shift, and go to state 64

    block  go to state 235


state 234

  111 elseif: ELSEIF LP expression RP . block

    LC  shift, and go to state 64

    block  go to state 236


state 235

  113 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block .

    $default  reduce using rule 113 (for_statement)


state 236

  111 elseif: ELSEIF LP expression RP block .

    $default  reduce using rule 111 (elseif)
